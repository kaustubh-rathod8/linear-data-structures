#include <stdio.h>
#include <stdlib.h>
struct employee
{
int id;
char
name[25];
int
salary;
int flag;
};
void insert(FILE *fp)
{
struct employee e;
char ch;
fp = fopen("Employee.txt", "a+");
if (fp == NULL)
{
printf("\n File cannot be Opened");
return;
}
do
{
printf("\nEnter Employee Id:");
scanf("%d", &e.id);
printf("\nEnter Employee Name:");
scanf("%s", e.name);
printf("\nEnter Employee Salary:");
scanf("%d", &e.salary);
e.flag = 0;
fwrite(&e, sizeof(e), 1, fp);
} while (ch == 1);
fclose(fp);
}
void display(FILE
*fp)

{
struct
employee e;
int i = 0;
fp = fopen("Employee.txt", "r");
if (fp == NULL)
{
printf("\nFile cannot be Opened:");
return;
}
while (fread(&e, sizeof(e), 1, fp))
{
if (e.flag == 0)
{
i++;
printf("\nEmployees Record %d", i);
printf("\n********");
printf("\n\t Name of Employees \tID\t \tSalary\t");
printf("\n\t\t %s\t\t%d\t\t %d\t\t", e.name, e.id, e.salary);
printf("\n********");
printf("\n");
}
}
fclose(fp);
}
void search(FILE *fp)
{
struct employee e;
int n, i = 0;
fp = fopen("Employee.txt", "r");
if (fp == NULL)
{
printf("\nFile cannot be opened");
return;
}
printf("\nEnter ID of Employee to be search:");
scanf("%d", &n);
while (fread(&e, sizeof(e), 1, fp))
{
if (e.id == n && e.flag == 0)
{
printf("\nRecord Found at location %d", i + 1);
printf("\n********");
printf("\n\t Name of Employees \tID\t \tSalary\t");
printf("\n\t\t %s\t\t %d\t\t %d\t\t", e.name, e.id, e.salary);
printf("\n********");

printf("\n");
fclose(fp);
return;
}
i++;
}
printf("\nRecord NotFound!!!");
fclose(fp);
}
void del(FILE
*fp,
FILE *fs)

{
struct employee
e;
int n, i = 0, flag = 0;
fp = fopen("Employee.txt", "r+");
if (fp == NULL)
{
printf("\nFile cannot be opened");
return;
}
printf("\nEnter ID of Employee to be Deleted:");
scanf("%d", &n);
while (fread(&e, sizeof(e), 1, fp))
{
if (e.id == n && e.flag == 0)
{
printf("\nRecord Found at location %d", i + 1);
e.flag = 1;
fseek(fp, (-1) * sizeof(e), SEEK_CUR);
fwrite(&e, sizeof(e), 1, fp);
printf("\nRecord Delted Successfully!");
flag = 1;
break;
}
i++;
}
if (flag == 0)
{
printf("\nRecord Not Found!!!");
}
fclose(fp);
}
void modify(FILE *fp)
{

struct employee e;
int n, i = 0, flag = 0;
fp = fopen("Employee.txt", "r+");
if (fp == NULL)
{
printf("\nFile cannot be opened");
return;
}
printf("\nEnter ID of Employee to be Modify:");
scanf("%d", &n);
while (fread(&e, sizeof(e), 1, fp))
{
if (e.id == n && e.flag == 0)
{
printf("\nRecord Found at location %d", i + 1);
printf("\nEnter New Modified Record:");
printf("\n");
printf("\nEnter Name ofEmployee:");
scanf("%s", e.name);
printf("\nEnter Salary of Employee:");
scanf("%d", &e.salary);
fseek(fp, (-1) * sizeof(e), SEEK_CUR);
fwrite(&e, sizeof(e), 1, fp);
printf("\nRecord Modified Successfully!");
flag = 1;
break;
}
i++;
}
if (flag == 0)
{
printf("\nRecord Not Found!!!");
}
fclose(fp);
}
int main()
{
FILE
*fp,
*fs;
int choice;
char ch;
do
{
printf("\n1.Create Employee Database");

printf("\n2.Display Database");
printf("\n3.Search Record");
printf("\n4.Delete Record");
printf("\n5.Modify Record");
printf("\n6.Exit");
printf("\n\nEnter your choice:");
scanf("%d", &choice);
switch (choice)
{
case 1:
insert(fp);
break;
case 2:
display(fp);
break;
case 3:
search(fp);
break;
case 4:
del(fp, fs);
break;
case 5:
modify(fp);
break;
case 6:
exit(0);
default:
printf("\nEnter Correct Choice");
}
} while (choice != 6);
}